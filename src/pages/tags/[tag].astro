---
// import type { MarkdownInstance } from 'astro'
// import type { PostFrontmatter } from '@pages/blog.astro'
import { getCollection } from 'astro:content'
import BaseLayout from '@layouts/BaseLayout.astro'
import BlogPost from '@components/BlogPost.astro'

export async function getStaticPaths() {
  // Get all posts from `@pages/posts/*.md`
  // const allPosts: MarkdownInstance<PostFrontmatter>[] =
  //   await Astro.glob<PostFrontmatter>('../posts/*.md')

  // Get all posts from `./src/content/posts/*.md`
  const allPosts = await getCollection('posts')

  // Get all tags from all posts in @pages/posts/*.md
  const uniqueTags = [...new Set(allPosts.flatMap(post => post.data.tags))]

  return uniqueTags.map(tag => {
    const filteredPosts = allPosts.filter(post => post.data.tags?.includes(tag))
    return {
      params: { tag },
      props: { posts: filteredPosts },
    }
  })
}

const { tag } = Astro.params
const { posts } = Astro.props
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map(post => (
        <BlogPost
          url={`/posts/${post.slug}`}
          title={post.data.title}
        />
      ))
    }
  </ul>
</BaseLayout>
